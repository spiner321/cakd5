<MVT>

- Model : DB에 저장되는 데이터에 대한 정의를 담고 있는 클래스. 하나의 클래스가 하나의 DB 테이블이다.
- View : 사용자의 요청에 따라 프로그램이 동작하여 데이터를 가져와서 처리한 결과를 템플릿에 전달한다. (컨트롤러 역할)
- Template : HTML 파일들을 통해 이용자가 시각적으로 확인할 수 있는 화면들을 보여준다. (UI 부분)



<처리 과정>

1. 클라이언트의 요청을 받으면 URLconf를 이용하여 URL 분석한다.
2. URL 분석 결과로 담당 뷰를 호출한다.
3. 호출된 뷰는 자신의 로직을 실행하면서 DB처리가 필요하면 모델을 통해 처리하고 결과를 반환 받는다. (CRUD - Create(생성), Read(읽기), Update(갱신), Delete(삭제) 지시)
4. 뷰는 로직 처리가 끝나면 템플릿을 사용해 클라이언트에 전송할 html 파일을 생성한다.
5. 최종 결과로 html 파일을 클라이언트에게 보내 응답한다.



<코딩 순서>

1. 프로젝트 뼈대 만들기 : 프로젝트 및 앱 개발에 필요한 디렉터리와 파일생성
2. 모델 코딩하기 : 테이블 관련 사항을 개발
3. URL (urls.py) : URL 및 뷰 매핑 관계를 정의
4. 뷰 코딩하기(views.py) :  애플리케이션 로직 개발
5. 탬플릿 코딩하기(templates/ 디렉터리 하위의 *.html 파일들) : 화면 UI개발
- 뷰와 탬플릿 순서는 상황에 따라 순서 변경